   
   
   
# Типы данных
    Простые — числа и строки.
    Коллекции — списки ['s', 'k', 'i', 'l'], кортежи ('p', 'y', 't') и словари {'first_name':'Алексей'} -ключ : значение
    Остальные — файлы, итераторы, сокеты, NaN.




pip             # pip install используется для установки любого программного пакета из онлайн-репозитория
print(объект)   # для печати сообщений
class           # для создания классов
type(объект)    # проверки типа или класса объекта.
range(start, stop, step)    # генерации последовательности целых чисел,
round(number, digits)   # для округления числа: number — число с плавающей запятой; digits — количество цифр после десятичной точки (опционально; по умолчанию — 0).
def     #Команда определения функции
len(object) # Команда len или функция len() используются для подсчёта количества элементов в объекте

# Строковые команды

.isalnum()    # проверяет, являются ли все символы данной строки буквенно-цифровыми или нет. Он возвращает логическое значение.
.capitalize() # возвращает строку, изменяя ее первый символ на верхний регистр, а остальные переводя в нижний
.count(substring, start, end) # возвращает количество вхождений подстроки в строковый объект.
    # stringname — строка, где будет выполняться поиск.
    # substring — подстрока, значение которой нужно найти.
    # start — начальный индекс в строке, с которого начинается поиск (опционально).
    # end — конечный индекс в строке, где заканчивается поиск (опционально).
.center(length, character) # для выравнивания строки по центру с заполнением указанным символом.
    # string — строка, которую нужно выровнять по центру.
    # length — полная длина новой строки.
    # character — символ для заполнения пропущенного места с каждой стороны. По умолчанию — « » (пробел).

# Команды для объектов списка

.append(element)    # добавления элемента в конец списка.
    # list — объект списка, в который нужно добавить элемент.
    # element — новый элемент, который добавляется в список.
.copy() # создает новую копию объекта списка. Она возвращает новый объект списка.
.insert(position, element)   # insert() добавляет элемент в указанное место в объекте списка.
    # position — позиция, в которую нужно вставить новый элемент. Если указанная позиция превышает количество элементов в списке, элемент будет вставляться в конец.
    # element — новый элемент, который необходимо добавить.
.pop(position)  #  pop() используется для удаления элемента из указанной позиции в списке.
reverse()   # изменяет порядок всех элементов в списке
.sort() # для сортировки элементов списка в порядке возрастания.

# Команды кортежа

.count(элемент) # для подсчета вхождений элемента в кортеже.
.index(элемент) # для поиска индекса первого вхождения элемента.

# Команды множества

    # setname — имя переменной set, в которую нужно добавить новый элемент.
    # element — элемент, который необходимо добавить.
.add(element)    # позволяет добавить новый элемент в множество.
.discard(element)    # позволяет удалить указанный элемент из набора
.remove(element) #  для удаления указанного элемента из множества
setA.difference(setB)   # для получения множества, содержащего разность двух множеств
setA.difference_update(setB)    # позволяет получить набор элементов, которые присутствуют в первом множестве и не являются общими для обоих
.intersection(set1, set2, … setn)   # отображает множество, содержащее элементы, которые существуют во всех указанных множествах.
setA.issubset(setB) # проверяет, все ли элементы множества setA присутствуют в setB. Команда возвращает логическое значение.
setA.union(setB)    # возвращает все элементы из обоих множеств, кроме повторяющихся.

# Команды словаря

    
    # keys — кортеж или список ключевых элементов.
    # value — значение, которое будет связано со всеми указанными ключами.
.fromkeys(keys, value)  # для создания словаря с указанными ключами и значением.
.get(key, value)    # позволяет получить значения указанного ключа
.items()    #для отображения всех элементов словаря
.keys() # для получения всех ключей
.values()   # позволяет получить всех значения в словаре.
.pop(ключ)  # для удаления пары ключ-значение


